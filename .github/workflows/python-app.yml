# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build and Deploy on PR Merge

on:
  push:
    branches: [ main, dev ]

permissions:
  contents: read

jobs:
  build:
    if: false
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/checkout@v4
    - name: GCloud Auth Setup
      uses: ./.github/actions/gcloud-auth
      with:
        credentials_json: ${{ secrets.GCP_DEPLOY_SA }}
        project_id: ${{ vars.GCP_AIRFLOW_PROJECT_ID }}
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.in ]; then
          pip install -r requirements.in;
        else
          echo "No requirement found!"
        fi
    - name: Build project python package
      run: |
        python -m build
    - name: Push python package on registry
      continue-on-error: true
      run: |
        python -m twine upload  --verbose \
        --repository-url https://${{vars.REGISTRY_PYTHON_ZONE}}-python.pkg.dev/${{vars.REGISTRY_PYTHON_PROJECT_ID}}/${{vars.REGISTRY_NAME}}/ \
        -u oauth2accesstoken \
        -p "$(gcloud auth application-default print-access-token)" \
        dist/*

  export-dags:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: GCloud Auth Setup
      uses: ./.github/actions/gcloud-auth
      with:
        credentials_json: ${{ secrets.GCP_DEPLOY_SA }}
        project_id: ${{ vars.GCP_AIRFLOW_PROJECT_ID }}
    - name: Update Airflow dags
      run: |
        echo Loading dags in airflow
        gcloud compute scp --zone=${{ vars.GCP_ZONE }} --recurse \
        ./airflow/dags/* \
          ${{ vars.GCP_SCP_USER }}@${{ vars.GCP_AIRFLOW_INSTANCE }}:/home/stephane/code/sromany/project62/airflow/dags

  install-package:
    # needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: GCloud Auth Setup
      uses: ./.github/actions/gcloud-auth
      with:
        credentials_json: ${{ secrets.GCP_DEPLOY_SA }}
        project_id: ${{ vars.GCP_AIRFLOW_PROJECT_ID }}
    - name: Install project package
      run: |
        # gcloud compute ssh ${{ secrets.GCP_INSTANCE_USER }}@${{ vars.GCP_AIRFLOW_INSTANCE }} --zone=${{ vars.GCP_ZONE }} --command "cd code/sromany/project62/;id -a;echo ${!PYTHON*};pwd;/home/stephane/.pyenv/shims/pip -h"
        gcloud compute ssh ${{ secrets.GCP_INSTANCE_USER }}@${{ vars.GCP_AIRFLOW_INSTANCE }} --zone=${{ vars.GCP_ZONE }} --command \ "/home/stephane/.pyenv/shims/pip install --index-url https://${{vars.REGISTRY_PYTHON_ZONE}}-python.pkg.dev/${{vars.REGISTRY_PYTHON_PROJECT_ID}}/${{vars.REGISTRY_NAME}}/ project62"
